{"version":3,"sources":["Assets/flag.png","Assets/mine.png","Components/Utils.js","Components/Square.js","Assets/Constants.js","Components/Board.js","Components/Header.js","App.js","index.js"],"names":["getAroundTiles","index","size","gridSize","map","tile","tileIndex","filter","Square","updateTileMap","tileMap","setFoundedMines","foundedMines","handleRightClick","e","preventDefault","updatedTile","hasFlag","putFlag","boardCopy","slice","splice","hasMine","handleLeftClick","item","faceDown","gameLost","revealedSquares","flipped","push","length","one","pop","openTile","minesAround","forEach","revealSquare","onClick","onContextMenu","className","src","Flag","height","width","Mine","Board","newGame","setNewGame","useState","setTileMap","prepareTileMap","minesIndex","baseItem","Array","fill","Math","floor","random","self","indexOf","aroundTiles","aroundIndex","useEffect","style","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e80cd245.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/flag.e33017d2.png\";","export default __webpack_public_path__ + \"static/media/mine.7e901939.png\";","import { size } from \"../Assets/Constants\";\r\n\r\nexport const getAroundTiles = (index, size) => {\r\n  const gridSize = size * size;\r\n  const aroundTiles = [\r\n    -size - 1,\r\n    -size,\r\n    -size + 1,\r\n    -1,\r\n    0,\r\n    1,\r\n    size - 1,\r\n    size,\r\n    size + 1,\r\n  ];\r\n\r\n  return aroundTiles\r\n    .map((tile) => {\r\n      const tileIndex = tile + index;\r\n      if (tileIndex < 0 || tileIndex >= gridSize || tileIndex === index)\r\n        return null;\r\n      if ((index + 1) % size === 0 && tileIndex % size === 0) return null; // Edge case (literally)\r\n      if (index % size === 0 && (tileIndex + 1) % size === 0) return null; // Edge case (literally)\r\n      return tileIndex;\r\n    })\r\n    .filter((tile) => tile !== null);\r\n};\r\n\r\nexport const revealSquare = (boardCopy, index) => {\r\n  if (!boardCopy[index].faceDown) {\r\n    return boardCopy;\r\n  }\r\n\r\n  let flipped = [];\r\n  flipped.push({ ...boardCopy[index], index: index });\r\n  while (flipped.length !== 0) {\r\n    let one = flipped.pop();\r\n\r\n    if (one.faceDown) {\r\n      const openTile = { ...boardCopy[one.index], faceDown: false };\r\n      boardCopy.splice(one.index, 1, openTile);\r\n      one.faceDown = false;\r\n    }\r\n    if (one.minesAround !== 0) {\r\n      break;\r\n    }\r\n\r\n    const surroundedTiles = getAroundTiles(one.index, size);\r\n    surroundedTiles.forEach((item) => {\r\n      if (boardCopy[item].minesAround === 0 && boardCopy[item].faceDown) {\r\n        flipped.push({ ...boardCopy[item], index: item });\r\n      }\r\n      if (boardCopy[item].faceDown) {\r\n        const openTile = { ...boardCopy[item], faceDown: false };\r\n        boardCopy.splice(item, 1, openTile);\r\n      }\r\n    });\r\n  }\r\n  return boardCopy;\r\n};\r\n\r\nexport const putFlag = (tile) => {\r\n  const newTile = { ...tile, hasFlag: !tile.hasFlag };\r\n  return newTile;\r\n};\r\n\r\nexport const gameLost = (tileMap, updateTileMap) => {\r\n  const revealedMap = tileMap.map((item) => ({ ...item, faceDown: false }));\r\n  updateTileMap(revealedMap);\r\n};\r\n","import Flag from \"../Assets/flag.png\";\r\nimport Mine from \"../Assets/mine.png\";\r\nimport { gameLost, putFlag, revealSquare } from \"./Utils\";\r\n\r\nexport const Square = ({\r\n  tile,\r\n  updateTileMap,\r\n  tileMap,\r\n  index,\r\n  setFoundedMines,\r\n  foundedMines,\r\n}) => {\r\n  const handleRightClick = (e, tile) => {\r\n    e.preventDefault();\r\n    const updatedTile = putFlag(tile);\r\n    const boardCopy = tileMap.slice();\r\n    boardCopy.splice(index, 1, updatedTile);\r\n    updateTileMap(boardCopy);\r\n    if (tile.hasMine) {\r\n      setFoundedMines(foundedMines + 1);\r\n    }\r\n  };\r\n\r\n  const handleLeftClick = (tile) => {\r\n    const boardCopy = tileMap.slice();\r\n    if (tile.hasMine) {\r\n      gameLost(tileMap, updateTileMap);\r\n    } else {\r\n      let revealedSquares = revealSquare(boardCopy, index);\r\n      updateTileMap(revealedSquares);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={() => handleLeftClick(tile)}\r\n      onContextMenu={(e) => handleRightClick(e, tile)}\r\n      className={tile.faceDown ? \"faceDown\" : \"visible\"}\r\n    >\r\n      <div className=\"square\">\r\n        {tile.faceDown ? (\r\n          tile.hasFlag ? (\r\n            <img src={Flag} height=\"30\" width=\"30\" />\r\n          ) : null\r\n        ) : tile.hasMine ? (\r\n          <img src={Mine} height=\"30\" width=\"30\" />\r\n        ) : tile.minesAround > 0 ? (\r\n          <span>{tile.minesAround}</span>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const size = 10;\r\nexport const mines = 10;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Square } from \"./Square\";\r\nimport { size, mines } from \"../Assets/Constants\";\r\nimport { getAroundTiles } from \"./Utils\";\r\n\r\nexport const Board = ({\r\n  newGame,\r\n  setNewGame,\r\n  foundedMines,\r\n  setFoundedMines,\r\n}) => {\r\n  const [tileMap, setTileMap] = useState([]);\r\n\r\n  const prepareTileMap = () => {\r\n    const gridAmount = size * size;\r\n    const minesIndex = [];\r\n    const baseItem = {\r\n      faceDown: true,\r\n      hasMine: false,\r\n      hasFlag: false,\r\n      minesAround: 0,\r\n    };\r\n    const map = new Array(gridAmount).fill(baseItem);\r\n    setNewGame(false);\r\n\r\n    while (minesIndex.length < mines) {\r\n      minesIndex.push(Math.floor(Math.random() * gridAmount));\r\n    }\r\n    minesIndex\r\n      .filter((item, index, self) => self.indexOf(item) === index)\r\n      .forEach((index) => {\r\n        const aroundTiles = getAroundTiles(index, size);\r\n        map[index] = { ...baseItem, hasMine: true };\r\n        aroundTiles.forEach((aroundIndex) => {\r\n          map[aroundIndex] = {\r\n            ...map[aroundIndex],\r\n            minesAround: map[aroundIndex][\"minesAround\"] + 1,\r\n          };\r\n        });\r\n      });\r\n    return map;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTileMap(prepareTileMap());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newGame) {\r\n      setTileMap(prepareTileMap());\r\n      setFoundedMines(0);\r\n    }\r\n  }, [newGame]);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"grid\" style={{ \"--size\": 10 }}>\r\n        {tileMap.map((tile, index) => (\r\n          <Square\r\n            key={index}\r\n            index={index}\r\n            tile={tile}\r\n            updateTileMap={setTileMap}\r\n            tileMap={tileMap}\r\n            setFoundedMines={setFoundedMines}\r\n            foundedMines={foundedMines}\r\n          />\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import { mines } from \"../Assets/Constants\";\r\n\r\nexport const Header = ({ setNewGame, foundedMines }) => {\r\n  return (\r\n    <section className=\"header\">\r\n      <div className=\"minesCounter\">\r\n        <span>{foundedMines}</span>\r\n      </div>\r\n      <div className=\"emojiPlace\">\r\n        <span>{foundedMines === mines ? \"😎\" : \"🤔\"}</span>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <button onClick={() => setNewGame(true)}>New Game!</button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { useState } from \"react\";\nimport \"./Assets/Styles/App.scss\";\nimport { Board } from \"./Components/Board\";\nimport { Header } from \"./Components/Header\";\n\nfunction App() {\n  const [newGame, setNewGame] = useState(false);\n  const [foundedMines, setFoundedMines] = useState(0);\n\n  return (\n    <main>\n      <div className=\"gameContainer\">\n        <h1>MINESWEEPER</h1>\n        <Header\n          newGame={newGame}\n          setNewGame={setNewGame}\n          foundedMines={foundedMines}\n        />\n        <Board\n          newGame={newGame}\n          setNewGame={setNewGame}\n          setFoundedMines={setFoundedMines}\n          foundedMines={foundedMines}\n        />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}